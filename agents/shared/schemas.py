"""
Shared Schema Definitions for WordPress Content Generator

This module defines Pydantic models that represent the core data structures
used across all agents in the content generation pipeline. These schemas
ensure consistent data validation, serialization, and type checking.
"""

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union
from uuid import UUID, uuid4

from pydantic import BaseModel, Field, HttpUrl


class TaskStatus(str, Enum):
    """Status values for agent tasks in the pipeline."""
    QUEUED = "queued"
    PROCESSING = "processing"
    DONE = "done"
    ERROR = "error"


class ContentStatus(str, Enum):
    """Status values for content pieces in the pipeline."""
    DRAFT = "draft"
    EDITING = "editing"
    READY = "ready"
    SCHEDULED = "scheduled"
    PUBLISHED = "published"
    ARCHIVED = "archived"
    ERROR = "error"


class ResearchType(str, Enum):
    """Types of research citations."""
    FACT = "fact"
    QUOTE = "quote"
    STATISTIC = "statistic"
    DEFINITION = "definition"
    EXAMPLE = "example"
    STUDY = "study"


class AgentTask(BaseModel):
    """
    Universal schema for agent tasks across the system.
    Used for task assignment, execution tracking, and result storage.
    """
    id: UUID = Field(default_factory=uuid4)
    agent: str
    content_id: UUID
    input: Dict[str, Any]
    output: Dict[str, Any] = Field(default_factory=dict)
    status: TaskStatus = TaskStatus.QUEUED
    errors: List[str] = Field(default_factory=list)
    created_at: datetime = Field(default_factory=datetime.now)
    updated_at: datetime = Field(default_factory=datetime.now)
    
    class Config:
        json_schema_extra = {
            "example": {
                "agent": "seo-agent",
                "content_id": "123e4567-e89b-12d3-a456-426614174000",
                "input": {"domain": "fitness-blog.com", "niche": "weight training"},
                "output": {"seo": {"focus_keyword": "strength training for beginners"}},
                "status": "done",
                "errors": []
            }
        }


class StrategicPlan(BaseModel):
    """
    Strategic content plan that defines the high-level goals and parameters
    for content generation.
    """
    id: UUID = Field(default_factory=uuid4)
    domain: str
    audience: str
    tone: str
    niche: str
    goal: str
    created_at: datetime = Field(default_factory=datetime.now)
    updated_at: datetime = Field(default_factory=datetime.now)


class KeywordCluster(BaseModel):
    """
    SEO keyword data structure generated by the SEO agent.
    Contains focus keyword, supporting keywords, and internal linking targets.
    """
    id: UUID = Field(default_factory=uuid4)
    content_id: UUID
    focus_keyword: str
    supporting_keywords: List[str] = Field(default_factory=list)
    cluster_target: Optional[str] = None
    internal_links: List[str] = Field(default_factory=list)
    created_at: datetime = Field(default_factory=datetime.now)
    updated_at: datetime = Field(default_factory=datetime.now)


class ResearchCitation(BaseModel):
    """
    Research data structure generated by the Research agent.
    Contains excerpts, sources, and metadata about research findings.
    """
    id: UUID = Field(default_factory=uuid4)
    content_id: UUID
    excerpt: str
    url: HttpUrl
    type: ResearchType
    confidence: float = 1.0
    created_at: datetime = Field(default_factory=datetime.now)


class Hook(BaseModel):
    """
    Hook data structure generated by the Hook agent.
    Contains main hook and micro-hooks for content sections and social media.
    """
    id: UUID = Field(default_factory=uuid4)
    content_id: UUID
    main_hook: str
    micro_hooks: List[str] = Field(default_factory=list)
    created_at: datetime = Field(default_factory=datetime.now)


class ContentSection(BaseModel):
    """
    Section of a content piece, with heading and body text.
    """
    heading: str
    subheading: Optional[str] = None
    body: str
    order: int


class ContentImage(BaseModel):
    """
    Image data structure for content pieces.
    Contains URL, alt text, caption, and source information.
    """
    id: UUID = Field(default_factory=uuid4)
    content_id: UUID
    url: HttpUrl
    alt_text: str
    caption: Optional[str] = None
    source: str
    created_at: datetime = Field(default_factory=datetime.now)


class ContentPiece(BaseModel):
    """
    Core content piece data structure.
    Represents a complete article or blog post in the system.
    """
    id: UUID = Field(default_factory=uuid4)
    strategic_plan_id: UUID
    title: Optional[str] = None
    slug: Optional[str] = None
    status: ContentStatus = ContentStatus.DRAFT
    draft_text: Optional[str] = None
    final_text: Optional[str] = None
    sections: List[ContentSection] = Field(default_factory=list)
    featured_image_id: Optional[UUID] = None
    wp_post_id: Optional[int] = None
    scheduled_at: Optional[datetime] = None
    published_at: Optional[datetime] = None
    created_at: datetime = Field(default_factory=datetime.now)
    updated_at: datetime = Field(default_factory=datetime.now)


class HeadlineOptions(BaseModel):
    """
    Headline options generated by the Headline agent.
    Contains multiple title options and selected title.
    """
    id: UUID = Field(default_factory=uuid4)
    content_id: UUID
    title_options: List[str] = Field(default_factory=list)
    selected_title: Optional[str] = None
    subheaders: List[str] = Field(default_factory=list)
    created_at: datetime = Field(default_factory=datetime.now)


class EditingFeedback(BaseModel):
    """
    Feedback from editing agents (Flow Editor, Line Editor).
    Contains scores, notes, and suggested improvements.
    """
    id: UUID = Field(default_factory=uuid4)
    content_id: UUID
    agent: str
    grammar_score: Optional[float] = None
    readability_score: Optional[float] = None
    notes: List[str] = Field(default_factory=list)
    created_at: datetime = Field(default_factory=datetime.now)


class PublishingMetadata(BaseModel):
    """
    Metadata for WordPress publishing.
    Contains post ID, status, and scheduling information.
    """
    id: UUID = Field(default_factory=uuid4)
    content_id: UUID
    wp_post_id: int
    status: str
    scheduled_at: Optional[datetime] = None
    published_at: Optional[datetime] = None
    permalink: Optional[HttpUrl] = None
    created_at: datetime = Field(default_factory=datetime.now)
    updated_at: datetime = Field(default_factory=datetime.now)
